apiVersion: config.authorino.3scale.net/v1beta1
kind: Service
metadata:
  name: echo-api
spec:
  hosts:
    - echo-api
  identity:
    - name: keycloak
      oidc:
        endpoint: http://keycloak:8080/auth/realms/ostia
      credentials:
        in: authorization_header
        key_selector: Bearer

  metadata:
    - userInfo:
        identitySource: keycloak
        credentialsRef:
          name: userinfosecret
    - uma:
        identitySource: keycloak
        credentialsRef:
          name: umacredentialssecret
  authorization:
    - OPAPolicy:
        uuid: 8fa79d93-0f93-4e23-8c2a-666be266cad1
        inlineRego: |
          allow {
            http_request.method == "GET"
            path = ["hello"]
          }

          allow {
            http_request.method == "GET"
            own_resource
          }

          allow {
            http_request.method == "GET"
            path = ["bye"]
            is_admin
          }

          own_resource {
            some greetingid
            path = ["greetings", greetingid]
            resource := object.get(metadata, "uma", [])[0]
            owner := object.get(object.get(resource, "owner", {}), "id", "")
            subject := object.get(identity, "sub", object.get(identity, "username", ""))
            owner == subject
          }

          is_admin {
            identity.realm_access.roles[_] == "admin"
          }
    - JWTClaimSet:
        match:
          http:
            path: "/api/*"
        claim:
          aud: "api"
