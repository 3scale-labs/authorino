apiVersion: api.ostia.3scale.net
kind: AuthProvider
metadata:
  name: keycloak
spec:
  endpoint: http://keycloak-discovery.redhat-sso.svc.cluster.local:8080/auth/realms/ostia
---
apiVersion: api.ostia.3scale.net
kind: OAuthClient
metadata:
  name: authorino
spec:
  providerRef:
    name: keycloak
  credentials:
    client_id: authorino
    client_secret: 2e5246f2-f4ef-4d55-8225-36e725071dee
---
apiVersion: api.ostia.3scale.net
kind: OAuthClient
metadata:
  name: uma-resource-fetcher
spec:
  providerRef:
    name: keycloak
  credentials:
    client_id: pets-api
    client_secret: 523b92b6-625d-4e1e-a313-77e7a8ae4e88
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: echo-policy
data:
  policy.rego: |
    allow {
      http_request.method == "GET"
      path = ["pets"]
    }

    allow {
      http_request.method == "GET"
      own_resource
    }

    allow {
      http_request.method == "GET"
      path = ["stats"]
      is_admin
    }

    own_resource {
      some petid
      path = ["pets", petid]
      resource := object.get(metadata, "uma", [])[0]
      owner := object.get(object.get(resource, "owner", {}), "id", "")
      subject := object.get(identity, "sub", object.get(identity, "username", ""))
      owner == subject
    }

    is_admin {
      identity.realm_access.roles[_] == "admin"
    }
---
apiVersion: api.ostia.3scale.net
kind: OPAPolicy
metadata:
  name: my-inline-rego-policy
spec:
  type: inline
  valueFrom:
    configMapKeyRef:
      name: echo-policy
      key: policy.rego
status:
  policyId: 40f5976b-edf9-42f5-8c85-010d4a9992b3 # auto-generated by the controller (?)
---
apiVersion: api.ostia.3scale.net
kind: JWTClaimSet
metadata:
  name: echo-api-audience
spec:
  match:
    http:
      path: '/api/*'
  claim:
    aud: api
---
apiVersion: api.ostia.3scale.net
kind: ServiceConfig
metadata:
  name: echo-api
spec:
  host:
    - echo-api.svc.cluster.local
    - echo-api.authorino.apps.dev-eng-ocp4-5.dev.3sca.net
  identity:
    - protocol: oidc
      name: oidc-authn
      providerRef: keycloak
  metadata:
    - protocol: userinfo
      identitySource: oidc-authn
      clientRef: authorino
    - protocol: uma
      identitySource: oidc-authn
      clientRef: uma-resource-fetcher
  authorization:
    - type: OPAPolicy
      name: my-inline-rego-policy
    - type: JWTClaimSet
      name: echo-api-audience
      enabled: false
---
apiVersion: api.ostia.3scale.net
kind: Broker
metadata:
  name: authorino
spec:
  serviceConfigs:
    - name: echo-api
      enabled: true
